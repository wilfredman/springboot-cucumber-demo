buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
    }
    repositories {

        maven {
            url "https://artifactory.platform.manulife.io/artifactory/libs-release"
        }
        maven { url "https://plugins.gradle.org/m2/" }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
        classpath 'org.ajoberstar:gradle-jacoco:0.1.0'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'application'

apply plugin: 'jacoco'


group = 'com.tsukhu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven {
        url "https://artifactory.platform.manulife.io/artifactory/libs-release"
    }
    maven {
        url "https://artifactory.platform.manulife.io/artifactory/libs-snapshot"
    }
    jcenter()
    mavenCentral()
}

ext {
    springCloudVersion = 'Greenwich.SR1'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.ws:spring-ws-core")
    compile 'org.springframework:spring-core:5.1.6.RELEASE'
    compile 'org.springframework:spring-context:5.1.6.RELEASE'
    compile 'commons-io:commons-io:2.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'junit:junit:4.12'
    compile 'info.cukes:cucumber-java:1.2.5'
    compile 'info.cukes:cucumber-junit:1.2.5'

    compile group: 'io.spring.platform', name: 'platform-bom', version: '1.1.2.RELEASE', ext: 'pom'
    compile group: 'com.github.jnr', name: 'jnr-ffi', version: '1.0.3'
    implementation ('com.github.javafaker:javafaker:0.16') { exclude module: 'org.yaml' }
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.14'
    compile group: 'io.rest-assured', name: 'json-schema-validator', version: '3.3.0'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'

    compile("com.h2database:h2")

    testCompile group: 'com.h2database', name: 'h2', version: '1.4.199'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.boot:spring-boot-autoconfigure")
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
    testCompile group: 'io.rest-assured', name: 'json-schema-validator', version: '3.3.0'
    testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
    testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier")
    testCompile("org.springframework.cloud:spring-cloud-contract-wiremock:2.0.1.RELEASE")
    testCompile("com.atlassian.ta:wiremock-pact-generator:2.1.0")

    runtime("org.springframework.boot:spring-boot-devtools")
    compileOnly("org.projectlombok:lombok")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom 'io.spring.platform:platform-bom:1.1.2.RELEASE'
    }
}

mainClassName = 'com.tsukhu.demo.DemoApplication'

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

task buildDocker(type: Docker, dependsOn: build) {

    applicationName = "dilbert"
    dockerfile = file("src/main/docker/Dockerfile")
    addFile {
        from jar
        rename {'dilbert.jar'}
    }
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "dilbert"
        property "sonar.projectKey", "key1"
        property "sonar.projectVersion", "5.5"
        property "sonar.host.url", "http://localhost:9100"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.cpd.exclusions", "**/test/**"
        property "sonar.jacoco.reportPath", "opt/jacoco/test.exec" // path to coverage data
        property "sonar.jacoco.itReportPath", "${buildDir}/jacoco/integrationTest.exec"
        property "sonar.buildbreaker.skip", "false"
    }
}